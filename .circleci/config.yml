version: 2.1

orbs:
  node: circleci/node@5.0.2

commands:
  install-volta:
    description: Install volta to manage Node/npm versions
    steps:
      - run:
          name: Install volta
          # Teach the volta installer to update Circle's special env
          # file instead of the default.
          command: |
            curl https://get.volta.sh | PROFILE="$BASH_ENV" bash

  setup-node:
    parameters:
      node-version:
        type: string
        default: ""
    steps:
      - install-volta
      - checkout
      - when:
          condition: << parameters.node-version >>
          steps:
            - run: volta pin node@<< parameters.node-version >>
      - run: node --version
      - run: npm --version
      - node/install-packages

jobs:
  NodeJS:
    parameters:
      node-version:
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - setup-node:
          node-version: <<parameters.node-version>>
      - run: npm run test:ci
      - store_test_results:
          path: junit.xml

  # Other tests, unrelated to typical code tests.
  Linting:
    docker:
      - image: cimg/base:stable
    steps:
      - setup-node
      - run: npm run lint

  Query Check:
    docker:
      - image: cimg/base:stable
    steps:
      - setup-node
      - run:
          command: |
            if [ -z "$CHECKS_API_KEY" ]; then
              echo "NO CHECKS_API_KEY! CANNOT RUN! This is normal on PRs from Forks."
              exit 0 # i.e. pass tests.
            fi
            ENGINE_API_KEY=$CHECKS_API_KEY ./packages/apollo/bin/run client:check

  Generated Types Check:
    docker:
      - image: cimg/base:stable
    steps:
      - setup-node
      - run:
          name: Generate types locally and compare type files
          command: |
            if [ -z "$CHECKS_API_KEY" ]; then
              echo "NO CHECKS_API_KEY! CANNOT RUN! This is normal on PRs from Forks."
              exit 0 # i.e. pass tests.
            fi
            npx apollo client:codegen --key=$CHECKS_API_KEY --outputFlat --target=typescript currentTypes.ts
            cmp --silent currentTypes.ts ./packages/apollo-language-server/src/graphqlTypes.ts || (echo "Type check failed. Run 'npm run client:codegen'" && exit 1)

workflows:
  version: 2
  Build:
    jobs:
      - NodeJS:
          name: NodeJS << matrix.node-version >>
          matrix:
            parameters:
              node-version:
                - "12"
                - "14"
                - "16"
      - Linting
      - Query Check
      - Generated Types Check
