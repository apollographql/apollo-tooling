// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`client:codegen extracts queries with a custom tagName provided as a flag 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery {
  hello: string;
}
"
`;

exports[`client:codegen extracts queries with a custom tagName provided in the config 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery {
  hello: string;
}
"
`;

exports[`client:codegen generates operation IDs for swift files when flag is set 1`] = `
"{
  \\"4ef6e283add42442bd40bb38b80d6a8a6c039581eef7bdc431bd05d4375e8265\\": {
    \\"name\\": \\"QueryWithFragments\\"
  }
}"
`;

exports[`client:codegen writes exact Flow types when the useFlowExactObjects flag is set 1`] = `
"/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export type SimpleQuery = {|
  hello: string
|};/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`client:codegen writes flow types 1`] = `
"/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export type SimpleQuery = {
  hello: string
};/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`client:codegen writes json operations 1`] = `
Object {
  "fragments": Array [],
  "operations": Array [
    Object {
      "fields": Array [
        Object {
          "fieldName": "hello",
          "isConditional": false,
          "isDeprecated": false,
          "responseName": "hello",
          "type": "String!",
        },
      ],
      "filePath": "",
      "fragmentSpreads": Array [],
      "fragmentsReferenced": Array [],
      "inlineFragments": Array [],
      "operationId": "4de1e386589b0853a102a87a3f21ca25266116517e59c1e8be9442e2571f00bc",
      "operationName": "SimpleQuery",
      "operationType": "query",
      "rootType": "Query",
      "source": "query SimpleQuery {
  hello
}",
      "sourceWithFragments": "query SimpleQuery {
  hello
}",
      "variables": Array [],
    },
  ],
  "typesUsed": Array [],
}
`;

exports[`client:codegen writes json operations with typeNode (json-modern) 1`] = `
Object {
  "fragments": Array [],
  "operations": Array [
    Object {
      "fields": Array [
        Object {
          "fieldName": "hello",
          "isConditional": false,
          "isDeprecated": false,
          "responseName": "hello",
          "type": "String!",
          "typeNode": Object {
            "kind": "NonNullType",
            "type": Object {
              "kind": "NamedType",
              "name": Object {
                "kind": "Name",
                "value": "String",
              },
            },
          },
        },
      ],
      "filePath": "",
      "fragmentSpreads": Array [],
      "fragmentsReferenced": Array [],
      "inlineFragments": Array [],
      "operationId": "4de1e386589b0853a102a87a3f21ca25266116517e59c1e8be9442e2571f00bc",
      "operationName": "SimpleQuery",
      "operationType": "query",
      "rootType": "Query",
      "source": "query SimpleQuery {
  hello
}",
      "sourceWithFragments": "query SimpleQuery {
  hello
}",
      "variables": Array [],
    },
  ],
  "typesUsed": Array [],
}
`;

exports[`client:codegen writes read-only Flow types when the deprecated flag is set 1`] = `
"/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export type SimpleQuery = {
  +hello: string
};/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`client:codegen writes read-only Flow types when the flag is set 1`] = `
"/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export type SimpleQuery = {
  +hello: string
};/* @flow */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//=============================================================="
`;

exports[`client:codegen writes swift types from local schema 1`] = `
"// @generated
//  This file was automatically generated and should not be edited.

import Apollo
import Foundation

public final class SimpleQueryQuery: GraphQLQuery {
  /// The raw GraphQL definition of this operation.
  public let operationDefinition: String =
    \\"\\"\\"
    query SimpleQuery {
      hello
    }
    \\"\\"\\"

  public let operationName: String = \\"SimpleQuery\\"

  public init() {
  }

  public struct Data: GraphQLSelectionSet {
    public static let possibleTypes: [String] = [\\"Query\\"]

    public static var selections: [GraphQLSelection] {
      return [
        GraphQLField(\\"hello\\", type: .nonNull(.scalar(String.self))),
      ]
    }

    public private(set) var resultMap: ResultMap

    public init(unsafeResultMap: ResultMap) {
      self.resultMap = unsafeResultMap
    }

    public init(hello: String) {
      self.init(unsafeResultMap: [\\"__typename\\": \\"Query\\", \\"hello\\": hello])
    }

    public var hello: String {
      get {
        return resultMap[\\"hello\\"]! as! String
      }
      set {
        resultMap.updateValue(newValue, forKey: \\"hello\\")
      }
    }
  }
}
"
`;

exports[`client:codegen writes swift types from local schema in a graphql file 1`] = `
"// @generated
//  This file was automatically generated and should not be edited.

import Apollo
import Foundation

public final class SimpleQueryQuery: GraphQLQuery {
  /// The raw GraphQL definition of this operation.
  public let operationDefinition: String =
    \\"\\"\\"
    query SimpleQuery {
      hello
    }
    \\"\\"\\"

  public let operationName: String = \\"SimpleQuery\\"

  public init() {
  }

  public struct Data: GraphQLSelectionSet {
    public static let possibleTypes: [String] = [\\"Query\\"]

    public static var selections: [GraphQLSelection] {
      return [
        GraphQLField(\\"hello\\", type: .nonNull(.scalar(String.self))),
      ]
    }

    public private(set) var resultMap: ResultMap

    public init(unsafeResultMap: ResultMap) {
      self.resultMap = unsafeResultMap
    }

    public init(hello: String) {
      self.init(unsafeResultMap: [\\"__typename\\": \\"Query\\", \\"hello\\": hello])
    }

    public var hello: String {
      get {
        return resultMap[\\"hello\\"]! as! String
      }
      set {
        resultMap.updateValue(newValue, forKey: \\"hello\\")
      }
    }
  }
}
"
`;

exports[`client:codegen writes types for query with only client-side data 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery_complexLocalState {
  __typename: \\"LocalType\\";
  someData: string;
}

export interface SimpleQuery {
  localState: string;
  complexLocalState: SimpleQuery_complexLocalState;
}

/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//==============================================================
"
`;

exports[`client:codegen writes types for scala 1`] = `
"// @generated
//  This file was automatically generated and should not be edited.


object SimpleQueryQuery extends com.apollographql.scalajs.GraphQLQuery {
  val operationString =
    \\"query SimpleQuery {\\" +
    \\"  hello\\" +
    \\"}\\"
  val operation = com.apollographql.scalajs.gql(operationString)

  type Variables = Unit

  @scala.scalajs.js.native trait Data extends scala.scalajs.js.Object {
    @scala.scalajs.js.annotation.JSName(\\"hello\\") val hello: String
  }

  object Data {
    def apply(hello: String) = {
      scala.scalajs.js.Dynamic.literal(\\"hello\\" -> hello).asInstanceOf[Data]
    }

    def unapply(value: Data) = {
      Some((value.hello))
    }

    implicit class CopyExtensions(private val orig: Data) extends AnyVal {
      def copy(hello: String = orig.hello) = {
        scala.scalajs.js.Dynamic.literal(\\"hello\\" -> hello).asInstanceOf[Data]
      }
    }

    val possibleTypes = scala.collection.Set(\\"Query\\")

    implicit class ViewExtensions(private val orig: Data) extends AnyVal {
    }
  }
}"
`;

exports[`client:codegen writes types for typescript 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery {
  hello: string;
}

/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//==============================================================
"
`;

exports[`client:codegen writes types for typescript with a custom extension 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery {
  hello: string;
}
"
`;

exports[`client:codegen writes typescript types for query with client-side data when client schema in graphql file 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery_complexLocalState {
  __typename: \\"LocalType\\";
  someData: string;
}

export interface SimpleQuery_serverSideField {
  __typename: \\"ServerField\\";
  serverData: string;
  addedLocalData: string;
}

export interface SimpleQuery_localServerModel {
  __typename: \\"ServerField\\";
  serverData: string;
}

export interface SimpleQuery {
  hello: string;
  localState: string;
  complexLocalState: SimpleQuery_complexLocalState;
  serverSideField: SimpleQuery_serverSideField;
  localServerModel: SimpleQuery_localServerModel;
}

/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//==============================================================
"
`;

exports[`client:codegen writes typescript types for query with client-side data when client schema in js file 1`] = `
"/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

// ====================================================
// GraphQL query operation: SimpleQuery
// ====================================================

export interface SimpleQuery_complexLocalState {
  __typename: \\"LocalType\\";
  someData: string;
}

export interface SimpleQuery_serverSideField {
  __typename: \\"ServerField\\";
  serverData: string;
  addedLocalData: string;
}

export interface SimpleQuery_localServerModel {
  __typename: \\"ServerField\\";
  serverData: string;
}

export interface SimpleQuery {
  hello: string;
  localState: string;
  complexLocalState: SimpleQuery_complexLocalState;
  serverSideField: SimpleQuery_serverSideField;
  localServerModel: SimpleQuery_localServerModel;
}

/* tslint:disable */
/* eslint-disable */
// @generated
// This file was automatically generated and should not be edited.

//==============================================================
// START Enums and Input Objects
//==============================================================

//==============================================================
// END Enums and Input Objects
//==============================================================
"
`;
